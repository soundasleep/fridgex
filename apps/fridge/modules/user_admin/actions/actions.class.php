<?php
// auto-generated by sfPropelCrud
// date: 2008/07/24 15:35:45
?>
<?php

/**
 * user_admin actions.
 *
 * @package    fridge
 * @subpackage user_admin
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class user_adminActions extends myActions
{
	/**
	 * Only users are allowed to access pages in here.
	 * that have the appropriate permissions
	 */
	public function preExecute() {
		parent::preExecute();

		// get the user object
		$this->current_user = $this->getUserObject();

		if (!($this->current_user->canListUsers()))
			$this->insufficientRights();
	}

  public function executeIndex()
  {
    return $this->forward('user_admin', 'list');
  }

  public function executeList()
  {
    $this->users = UserPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->user = UserPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->user);
  }

  public function executeCreate()
  {
    $this->user = new User();

    $this->setTemplate('edit');

	if (!($this->current_user->canEditUser($this->user)))
		$this->insufficientRights();

  }

  public function executeEdit()
  {
    $this->user = UserPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->user);

	if (!($this->current_user->canEditUser($this->user)))
		$this->insufficientRights();

  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $user = new User();
    }
    else
    {
      $user = UserPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($user);
    }

	if (!($this->current_user->canEditUser($this->user)))
		$this->insufficientRights();

    $user->setId($this->getRequestParameter('id'));
    $user->setEmail($this->getRequestParameter('email'));
    $user->setName($this->getRequestParameter('name'));
    $user->setNickname($this->getRequestParameter('nickname'));

	if ($this->current_user->canSetCredit($this->user))
    	$user->setAccountCredit($this->getRequestParameter('account_credit'));

    $user->save();

    return $this->redirect('user_admin/show?id='.$user->getId());
  }

  public function executeDelete()
  {
    $user = UserPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($user);

	if (!($this->current_user->canDeleteUser($this->user)))
		$this->insufficientRights();

    $user->delete();

    return $this->redirect('user_admin/list');
  }
}
